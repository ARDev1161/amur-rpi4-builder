name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  release:
    types: ['released', 'prereleased']
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io


jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # github.repository as <account>/<repo>
      - id: image-name
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.repository }}

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ steps.image-name.outputs.lowercase }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr

      # Build and load Docker image
      # https://github.com/docker/build-push-action
      - name: Build Docker image
        id: build
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          load: true
          tags: ${{ steps.image-name.outputs.lowercase }}:tmp

      - name: Export libraries
        run: |
          container=$(docker run -d ${{ steps.image-name.outputs.lowercase }}:tmp \
              bash -c "tar cJf /home/develop/libraries.tar.xz /opt")
          status=$(docker wait $container)
          if [ $status -ne 0 ]; then
              echo "Error creating library archive"
              exit 1
          fi
          echo "Copying libraries from Docker container to host"
          docker cp $container:/home/develop/libraries.tar.xz libraries.tar.xz
          docker rm $container

      - name: Upload libraries
        uses: actions/upload-artifact@v2
        with:
          name: libraries
          path: libraries.tar.xz

      - name: Release libraries
        if: ${{ github.event.action == 'released' || github.event.action == 'prereleased' }}
        uses: softprops/action-gh-release@17cd0d34deddf848fc0e7d9be5202c148c270a0a
        with:
          files: libraries.tar.xz

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Push Docker image
        id: build-and-push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          build-args: |
            "HOST_TRIPLE=libraries"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
